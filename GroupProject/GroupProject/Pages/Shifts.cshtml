@page
@using DataItems.LogicItems;
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Text.RegularExpressions
@model Shifts
@{
    Layout = "Shared/_LoginLayout";
}

@functions {
    public string FormatShiftType(ShiftType shiftType)
    {
        string formattedName = shiftType.ToString();
        // Add a space before "Morning", "Afternoon", or "Evening"
        formattedName = Regex.Replace(formattedName, "(Morning|Afternoon|Evening)", " $1");

        // Replace "Morning", "Afternoon", "Evening" with "Late Morning", "Late Afternoon", "Late Evening"
        if (!formattedName.StartsWith("Early"))
        {
            formattedName = "Late " + formattedName;
        }

        return formattedName;
    }
}

<div class="login">
    <video autoplay loop muted class="bg-video">
        <source src="assets/media/login/background.mp4" type="video/mp4">
    </video>
    <section class="login text-center">
        <div class="container">
            <div class="login-block">
                <div style="margin-top: -15px;" class="login-content">
                    <h2 class="mt-3 section-title">
                        <img src="assets/media/Calendar.png" alt="Calendar Icon" class="section-icon"> Your Shifts:
                    </h2>
                    <p class="date-range-label">Shifts for the week of @Model.NewDate.AddDays(0 - (int)Model.NewDate.DayOfWeek + 1).ToShortDateString() - @Model.NewDate.AddDays(6 - (int)Model.NewDate.DayOfWeek + 1).ToShortDateString()</p>

                    <hr class="section-divider">

                    <div class="calendar">
                        <div class="calendar-header">
                            <div class="calendar-header-item shift-type">Shift Type</div>
                            @for (int dayIndex = 0; dayIndex < Model.WeekDays.Count; dayIndex++)
                            {
                                var day = Model.WeekDays[dayIndex];
                                var date = Model.NewDate.AddDays(dayIndex - (int)Model.NewDate.DayOfWeek + 1);
                                <div class="calendar-header-item @(date.Date == DateTime.Today ? "current-day" : "")">
                                    @day<br />@date.ToString("dd-MM-yyyy")
                                </div>
                            }
                        </div>

                        <div class="calendar-content">
                            @foreach (var shiftType in Enum.GetValues(typeof(ShiftType)).Cast<ShiftType>().OrderBy(st => !st.ToString().StartsWith("Early")))
                            {
                                <div class="calendar-row">
                                    <div class="calendar-day shift-type">@FormatShiftType(shiftType)</div>
                                    @for (int dayIndex = 0; dayIndex < Model.WeekDays.Count; dayIndex++)
                                    {
                                        bool working = Model._assignedShifts.Any(shift =>
                                        shift.Date == Model.NewDate.AddDays(dayIndex - (int)Model.NewDate.DayOfWeek + 1) &&
                                        shift.Type == (int)shiftType);
                                        <div class="calendar-day @(working ? "working" : "not-working")">
                                            @((working ? "Working" : "Not Working"))
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>

                    <div style="margin-top:15px"class="shift-navigation-buttons">
                        <form method="post">
                            <button class="btn" asp-page-handler="PreviousWeek">PAST WEEK</button>
                            <button class="btn" asp-page-handler="CurrentWeek">CURRENT WEEK</button>
                            <button class="btn" asp-page-handler="NextWeek">FUTURE WEEK</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>